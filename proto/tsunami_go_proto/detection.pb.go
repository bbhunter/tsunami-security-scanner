//
// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Data models for describing a vulnerability detection report.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: detection.proto

package tsunami_go_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Status of the vulnerability detection result.
type DetectionStatus int32

const (
	// Unspecified status.
	DetectionStatus_DETECTION_STATUS_UNSPECIFIED DetectionStatus = 0
	// Target is not vulnerable.
	DetectionStatus_SAFE DetectionStatus = 1
	// Target appears to be vulnerable (e.g. because running version is
	// vulnerable), but couldn't be verified.
	DetectionStatus_VULNERABILITY_PRESENT DetectionStatus = 2
	// Target is vulnerable and the detector successfully verified the
	// vulnerability.
	DetectionStatus_VULNERABILITY_VERIFIED DetectionStatus = 3
)

// Enum value maps for DetectionStatus.
var (
	DetectionStatus_name = map[int32]string{
		0: "DETECTION_STATUS_UNSPECIFIED",
		1: "SAFE",
		2: "VULNERABILITY_PRESENT",
		3: "VULNERABILITY_VERIFIED",
	}
	DetectionStatus_value = map[string]int32{
		"DETECTION_STATUS_UNSPECIFIED": 0,
		"SAFE":                         1,
		"VULNERABILITY_PRESENT":        2,
		"VULNERABILITY_VERIFIED":       3,
	}
)

func (x DetectionStatus) Enum() *DetectionStatus {
	p := new(DetectionStatus)
	*p = x
	return p
}

func (x DetectionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DetectionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_detection_proto_enumTypes[0].Descriptor()
}

func (DetectionStatus) Type() protoreflect.EnumType {
	return &file_detection_proto_enumTypes[0]
}

func (x DetectionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DetectionStatus.Descriptor instead.
func (DetectionStatus) EnumDescriptor() ([]byte, []int) {
	return file_detection_proto_rawDescGZIP(), []int{0}
}

// Full report about a detected vulnerability.
type DetectionReport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Information about the scanned target.
	TargetInfo *TargetInfo `protobuf:"bytes,1,opt,name=target_info,json=targetInfo,proto3" json:"target_info,omitempty"`
	// Information about the scanned network service.
	NetworkService *NetworkService `protobuf:"bytes,2,opt,name=network_service,json=networkService,proto3" json:"network_service,omitempty"`
	// Time when the vulnerability was detected.
	DetectionTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=detection_timestamp,json=detectionTimestamp,proto3" json:"detection_timestamp,omitempty"`
	// Status of the detection result.
	DetectionStatus DetectionStatus `protobuf:"varint,4,opt,name=detection_status,json=detectionStatus,proto3,enum=tsunami.proto.DetectionStatus" json:"detection_status,omitempty"`
	// Full details about the detected vulnerability.
	Vulnerability *Vulnerability `protobuf:"bytes,5,opt,name=vulnerability,proto3" json:"vulnerability,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetectionReport) Reset() {
	*x = DetectionReport{}
	mi := &file_detection_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetectionReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectionReport) ProtoMessage() {}

func (x *DetectionReport) ProtoReflect() protoreflect.Message {
	mi := &file_detection_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectionReport.ProtoReflect.Descriptor instead.
func (*DetectionReport) Descriptor() ([]byte, []int) {
	return file_detection_proto_rawDescGZIP(), []int{0}
}

func (x *DetectionReport) GetTargetInfo() *TargetInfo {
	if x != nil {
		return x.TargetInfo
	}
	return nil
}

func (x *DetectionReport) GetNetworkService() *NetworkService {
	if x != nil {
		return x.NetworkService
	}
	return nil
}

func (x *DetectionReport) GetDetectionTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.DetectionTimestamp
	}
	return nil
}

func (x *DetectionReport) GetDetectionStatus() DetectionStatus {
	if x != nil {
		return x.DetectionStatus
	}
	return DetectionStatus_DETECTION_STATUS_UNSPECIFIED
}

func (x *DetectionReport) GetVulnerability() *Vulnerability {
	if x != nil {
		return x.Vulnerability
	}
	return nil
}

type DetectionReportList struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DetectionReports []*DetectionReport     `protobuf:"bytes,1,rep,name=detection_reports,json=detectionReports,proto3" json:"detection_reports,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DetectionReportList) Reset() {
	*x = DetectionReportList{}
	mi := &file_detection_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetectionReportList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectionReportList) ProtoMessage() {}

func (x *DetectionReportList) ProtoReflect() protoreflect.Message {
	mi := &file_detection_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectionReportList.ProtoReflect.Descriptor instead.
func (*DetectionReportList) Descriptor() ([]byte, []int) {
	return file_detection_proto_rawDescGZIP(), []int{1}
}

func (x *DetectionReportList) GetDetectionReports() []*DetectionReport {
	if x != nil {
		return x.DetectionReports
	}
	return nil
}

var File_detection_proto protoreflect.FileDescriptor

var file_detection_proto_rawDesc = string([]byte{
	0x0a, 0x0f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0d, 0x74, 0x73, 0x75, 0x6e, 0x61, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x15, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e,
	0x61, 0x69, 0x73, 0x73, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13,
	0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xf1, 0x02, 0x0a, 0x0f, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74,
	0x73, 0x75, 0x6e, 0x61, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74,
	0x73, 0x75, 0x6e, 0x61, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x13, 0x64,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x49, 0x0a, 0x10, 0x64, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x74, 0x73, 0x75, 0x6e, 0x61, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x0f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x42, 0x0a, 0x0d, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x73, 0x75,
	0x6e, 0x61, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65,
	0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x62, 0x0a, 0x13, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4b,
	0x0a, 0x11, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x73, 0x75, 0x6e,
	0x61, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x10, 0x64, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x2a, 0x74, 0x0a, 0x0f, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x0a, 0x1c, 0x44, 0x45, 0x54, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x53, 0x41, 0x46, 0x45, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x56, 0x55,
	0x4c, 0x4e, 0x45, 0x52, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x50, 0x52, 0x45, 0x53,
	0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x56, 0x55, 0x4c, 0x4e, 0x45, 0x52, 0x41,
	0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x03, 0x42, 0x70, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x74, 0x73, 0x75, 0x6e, 0x61, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x0f, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x50, 0x01,
	0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x74, 0x73, 0x75, 0x6e, 0x61, 0x6d, 0x69, 0x2d, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x2d, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x74, 0x73, 0x75, 0x6e, 0x61, 0x6d, 0x69, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_detection_proto_rawDescOnce sync.Once
	file_detection_proto_rawDescData []byte
)

func file_detection_proto_rawDescGZIP() []byte {
	file_detection_proto_rawDescOnce.Do(func() {
		file_detection_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_detection_proto_rawDesc), len(file_detection_proto_rawDesc)))
	})
	return file_detection_proto_rawDescData
}

var file_detection_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_detection_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_detection_proto_goTypes = []any{
	(DetectionStatus)(0),          // 0: tsunami.proto.DetectionStatus
	(*DetectionReport)(nil),       // 1: tsunami.proto.DetectionReport
	(*DetectionReportList)(nil),   // 2: tsunami.proto.DetectionReportList
	(*TargetInfo)(nil),            // 3: tsunami.proto.TargetInfo
	(*NetworkService)(nil),        // 4: tsunami.proto.NetworkService
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
	(*Vulnerability)(nil),         // 6: tsunami.proto.Vulnerability
}
var file_detection_proto_depIdxs = []int32{
	3, // 0: tsunami.proto.DetectionReport.target_info:type_name -> tsunami.proto.TargetInfo
	4, // 1: tsunami.proto.DetectionReport.network_service:type_name -> tsunami.proto.NetworkService
	5, // 2: tsunami.proto.DetectionReport.detection_timestamp:type_name -> google.protobuf.Timestamp
	0, // 3: tsunami.proto.DetectionReport.detection_status:type_name -> tsunami.proto.DetectionStatus
	6, // 4: tsunami.proto.DetectionReport.vulnerability:type_name -> tsunami.proto.Vulnerability
	1, // 5: tsunami.proto.DetectionReportList.detection_reports:type_name -> tsunami.proto.DetectionReport
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_detection_proto_init() }
func file_detection_proto_init() {
	if File_detection_proto != nil {
		return
	}
	file_network_service_proto_init()
	file_reconnaissance_proto_init()
	file_vulnerability_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_detection_proto_rawDesc), len(file_detection_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_detection_proto_goTypes,
		DependencyIndexes: file_detection_proto_depIdxs,
		EnumInfos:         file_detection_proto_enumTypes,
		MessageInfos:      file_detection_proto_msgTypes,
	}.Build()
	File_detection_proto = out.File
	file_detection_proto_goTypes = nil
	file_detection_proto_depIdxs = nil
}
