//
// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Data models for describing a scanning target.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: scan_target.proto

package tsunami_go_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The information about a scan target.
type ScanTarget struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Target:
	//
	//	*ScanTarget_NetworkEndpoint
	//	*ScanTarget_NetworkService
	Target        isScanTarget_Target `protobuf_oneof:"target"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanTarget) Reset() {
	*x = ScanTarget{}
	mi := &file_scan_target_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanTarget) ProtoMessage() {}

func (x *ScanTarget) ProtoReflect() protoreflect.Message {
	mi := &file_scan_target_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanTarget.ProtoReflect.Descriptor instead.
func (*ScanTarget) Descriptor() ([]byte, []int) {
	return file_scan_target_proto_rawDescGZIP(), []int{0}
}

func (x *ScanTarget) GetTarget() isScanTarget_Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *ScanTarget) GetNetworkEndpoint() *NetworkEndpoint {
	if x != nil {
		if x, ok := x.Target.(*ScanTarget_NetworkEndpoint); ok {
			return x.NetworkEndpoint
		}
	}
	return nil
}

func (x *ScanTarget) GetNetworkService() *NetworkService {
	if x != nil {
		if x, ok := x.Target.(*ScanTarget_NetworkService); ok {
			return x.NetworkService
		}
	}
	return nil
}

type isScanTarget_Target interface {
	isScanTarget_Target()
}

type ScanTarget_NetworkEndpoint struct {
	// The network endpoint to be scanned.
	NetworkEndpoint *NetworkEndpoint `protobuf:"bytes,1,opt,name=network_endpoint,json=networkEndpoint,proto3,oneof"`
}

type ScanTarget_NetworkService struct {
	// The network service to be scanned.
	NetworkService *NetworkService `protobuf:"bytes,2,opt,name=network_service,json=networkService,proto3,oneof"`
}

func (*ScanTarget_NetworkEndpoint) isScanTarget_Target() {}

func (*ScanTarget_NetworkService) isScanTarget_Target() {}

var File_scan_target_proto protoreflect.FileDescriptor

var file_scan_target_proto_rawDesc = string([]byte{
	0x0a, 0x11, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x74, 0x73, 0x75, 0x6e, 0x61, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x15, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x01, 0x0a, 0x0a, 0x53, 0x63, 0x61,
	0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x4b, 0x0a, 0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x73, 0x75, 0x6e, 0x61, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x74, 0x73, 0x75, 0x6e, 0x61, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x08,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x71, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x73, 0x75, 0x6e, 0x61, 0x6d, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x10, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x50, 0x01, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x73, 0x75, 0x6e,
	0x61, 0x6d, 0x69, 0x2d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2d, 0x73, 0x63, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x73, 0x75, 0x6e, 0x61,
	0x6d, 0x69, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_scan_target_proto_rawDescOnce sync.Once
	file_scan_target_proto_rawDescData []byte
)

func file_scan_target_proto_rawDescGZIP() []byte {
	file_scan_target_proto_rawDescOnce.Do(func() {
		file_scan_target_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_scan_target_proto_rawDesc), len(file_scan_target_proto_rawDesc)))
	})
	return file_scan_target_proto_rawDescData
}

var file_scan_target_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_scan_target_proto_goTypes = []any{
	(*ScanTarget)(nil),      // 0: tsunami.proto.ScanTarget
	(*NetworkEndpoint)(nil), // 1: tsunami.proto.NetworkEndpoint
	(*NetworkService)(nil),  // 2: tsunami.proto.NetworkService
}
var file_scan_target_proto_depIdxs = []int32{
	1, // 0: tsunami.proto.ScanTarget.network_endpoint:type_name -> tsunami.proto.NetworkEndpoint
	2, // 1: tsunami.proto.ScanTarget.network_service:type_name -> tsunami.proto.NetworkService
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_scan_target_proto_init() }
func file_scan_target_proto_init() {
	if File_scan_target_proto != nil {
		return
	}
	file_network_proto_init()
	file_network_service_proto_init()
	file_scan_target_proto_msgTypes[0].OneofWrappers = []any{
		(*ScanTarget_NetworkEndpoint)(nil),
		(*ScanTarget_NetworkService)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_scan_target_proto_rawDesc), len(file_scan_target_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_scan_target_proto_goTypes,
		DependencyIndexes: file_scan_target_proto_depIdxs,
		MessageInfos:      file_scan_target_proto_msgTypes,
	}.Build()
	File_scan_target_proto = out.File
	file_scan_target_proto_goTypes = nil
	file_scan_target_proto_depIdxs = nil
}
