//
// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Data models utilized by the Tsunami Paylaod Generator

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: payload_generator.proto

package tsunami_go_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PayloadValidationType int32

const (
	PayloadValidationType_VALIDATION_TYPE_UNSPECIFIED PayloadValidationType = 0
	PayloadValidationType_VALIDATION_REGEX            PayloadValidationType = 1
)

// Enum value maps for PayloadValidationType.
var (
	PayloadValidationType_name = map[int32]string{
		0: "VALIDATION_TYPE_UNSPECIFIED",
		1: "VALIDATION_REGEX",
	}
	PayloadValidationType_value = map[string]int32{
		"VALIDATION_TYPE_UNSPECIFIED": 0,
		"VALIDATION_REGEX":            1,
	}
)

func (x PayloadValidationType) Enum() *PayloadValidationType {
	p := new(PayloadValidationType)
	*p = x
	return p
}

func (x PayloadValidationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayloadValidationType) Descriptor() protoreflect.EnumDescriptor {
	return file_payload_generator_proto_enumTypes[0].Descriptor()
}

func (PayloadValidationType) Type() protoreflect.EnumType {
	return &file_payload_generator_proto_enumTypes[0]
}

func (x PayloadValidationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayloadValidationType.Descriptor instead.
func (PayloadValidationType) EnumDescriptor() ([]byte, []int) {
	return file_payload_generator_proto_rawDescGZIP(), []int{0}
}

// The type of vulnerability the detector is looking for
type PayloadGeneratorConfig_VulnerabilityType int32

const (
	// Unspecified vulnerability type
	PayloadGeneratorConfig_VULNERABILITY_TYPE_UNSPECIFIED PayloadGeneratorConfig_VulnerabilityType = 0
	// RCE which returns the output of the execution
	PayloadGeneratorConfig_REFLECTIVE_RCE PayloadGeneratorConfig_VulnerabilityType = 1
	// RCE which does not return the output of the execution
	PayloadGeneratorConfig_BLIND_RCE PayloadGeneratorConfig_VulnerabilityType = 2
	// Server-Side Request Forgery
	PayloadGeneratorConfig_SSRF PayloadGeneratorConfig_VulnerabilityType = 3
	// Arbitrary File Write
	PayloadGeneratorConfig_ARBITRARY_FILE_WRITE PayloadGeneratorConfig_VulnerabilityType = 4
	// RCE without output of the execution + File Read (needed to get
	// confirmation string)
	PayloadGeneratorConfig_BLIND_RCE_FILE_READ PayloadGeneratorConfig_VulnerabilityType = 5
)

// Enum value maps for PayloadGeneratorConfig_VulnerabilityType.
var (
	PayloadGeneratorConfig_VulnerabilityType_name = map[int32]string{
		0: "VULNERABILITY_TYPE_UNSPECIFIED",
		1: "REFLECTIVE_RCE",
		2: "BLIND_RCE",
		3: "SSRF",
		4: "ARBITRARY_FILE_WRITE",
		5: "BLIND_RCE_FILE_READ",
	}
	PayloadGeneratorConfig_VulnerabilityType_value = map[string]int32{
		"VULNERABILITY_TYPE_UNSPECIFIED": 0,
		"REFLECTIVE_RCE":                 1,
		"BLIND_RCE":                      2,
		"SSRF":                           3,
		"ARBITRARY_FILE_WRITE":           4,
		"BLIND_RCE_FILE_READ":            5,
	}
)

func (x PayloadGeneratorConfig_VulnerabilityType) Enum() *PayloadGeneratorConfig_VulnerabilityType {
	p := new(PayloadGeneratorConfig_VulnerabilityType)
	*p = x
	return p
}

func (x PayloadGeneratorConfig_VulnerabilityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayloadGeneratorConfig_VulnerabilityType) Descriptor() protoreflect.EnumDescriptor {
	return file_payload_generator_proto_enumTypes[1].Descriptor()
}

func (PayloadGeneratorConfig_VulnerabilityType) Type() protoreflect.EnumType {
	return &file_payload_generator_proto_enumTypes[1]
}

func (x PayloadGeneratorConfig_VulnerabilityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayloadGeneratorConfig_VulnerabilityType.Descriptor instead.
func (PayloadGeneratorConfig_VulnerabilityType) EnumDescriptor() ([]byte, []int) {
	return file_payload_generator_proto_rawDescGZIP(), []int{0, 0}
}

// The environment that processes the payload for execution e.g. a PHP-based
// target likely wants a payload that is itself PHP code.
type PayloadGeneratorConfig_InterpretationEnvironment int32

const (
	// Unspecified interpretation environment type
	PayloadGeneratorConfig_INTERPRETATION_ENVIRONMENT_UNSPECIFIED PayloadGeneratorConfig_InterpretationEnvironment = 0
	// Payload is interpreted within a Linux shell environment
	PayloadGeneratorConfig_LINUX_SHELL PayloadGeneratorConfig_InterpretationEnvironment = 1
	// Payload is interpreted wihin a Java compiler context
	PayloadGeneratorConfig_JAVA PayloadGeneratorConfig_InterpretationEnvironment = 2
	// Payload is interpreted wihin a PHP VM context
	PayloadGeneratorConfig_PHP PayloadGeneratorConfig_InterpretationEnvironment = 3
	// Interpretation environment doesn't matter
	PayloadGeneratorConfig_INTERPRETATION_ANY PayloadGeneratorConfig_InterpretationEnvironment = 4
	// Payload is interpreted wihin crontab
	PayloadGeneratorConfig_LINUX_ROOT_CRONTAB PayloadGeneratorConfig_InterpretationEnvironment = 5
	// Payload is interpreted wihin a Windows shell environment
	PayloadGeneratorConfig_WINDOWS_SHELL PayloadGeneratorConfig_InterpretationEnvironment = 6
	// Payload is interpreted within a JSP shell environment
	PayloadGeneratorConfig_JSP PayloadGeneratorConfig_InterpretationEnvironment = 7
)

// Enum value maps for PayloadGeneratorConfig_InterpretationEnvironment.
var (
	PayloadGeneratorConfig_InterpretationEnvironment_name = map[int32]string{
		0: "INTERPRETATION_ENVIRONMENT_UNSPECIFIED",
		1: "LINUX_SHELL",
		2: "JAVA",
		3: "PHP",
		4: "INTERPRETATION_ANY",
		5: "LINUX_ROOT_CRONTAB",
		6: "WINDOWS_SHELL",
		7: "JSP",
	}
	PayloadGeneratorConfig_InterpretationEnvironment_value = map[string]int32{
		"INTERPRETATION_ENVIRONMENT_UNSPECIFIED": 0,
		"LINUX_SHELL":                            1,
		"JAVA":                                   2,
		"PHP":                                    3,
		"INTERPRETATION_ANY":                     4,
		"LINUX_ROOT_CRONTAB":                     5,
		"WINDOWS_SHELL":                          6,
		"JSP":                                    7,
	}
)

func (x PayloadGeneratorConfig_InterpretationEnvironment) Enum() *PayloadGeneratorConfig_InterpretationEnvironment {
	p := new(PayloadGeneratorConfig_InterpretationEnvironment)
	*p = x
	return p
}

func (x PayloadGeneratorConfig_InterpretationEnvironment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayloadGeneratorConfig_InterpretationEnvironment) Descriptor() protoreflect.EnumDescriptor {
	return file_payload_generator_proto_enumTypes[2].Descriptor()
}

func (PayloadGeneratorConfig_InterpretationEnvironment) Type() protoreflect.EnumType {
	return &file_payload_generator_proto_enumTypes[2]
}

func (x PayloadGeneratorConfig_InterpretationEnvironment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayloadGeneratorConfig_InterpretationEnvironment.Descriptor instead.
func (PayloadGeneratorConfig_InterpretationEnvironment) EnumDescriptor() ([]byte, []int) {
	return file_payload_generator_proto_rawDescGZIP(), []int{0, 1}
}

// The actual runtime environment when the payload is run e.g. while a
// PHP-based target wants a PHP-interpretation environment, the actual code
// execution may happen via the Linux shell: exec(“echo \”this is running in
// the system.\””).
type PayloadGeneratorConfig_ExecutionEnvironment int32

const (
	// Unspecified execution environment type
	PayloadGeneratorConfig_EXECUTION_ENVIRONMENT_UNSPECIFIED PayloadGeneratorConfig_ExecutionEnvironment = 0
	// Execute within the InterpretationEnvironment
	PayloadGeneratorConfig_EXEC_INTERPRETATION_ENVIRONMENT PayloadGeneratorConfig_ExecutionEnvironment = 1
	// Execution environment doesn't matter
	PayloadGeneratorConfig_EXEC_ANY PayloadGeneratorConfig_ExecutionEnvironment = 2
)

// Enum value maps for PayloadGeneratorConfig_ExecutionEnvironment.
var (
	PayloadGeneratorConfig_ExecutionEnvironment_name = map[int32]string{
		0: "EXECUTION_ENVIRONMENT_UNSPECIFIED",
		1: "EXEC_INTERPRETATION_ENVIRONMENT",
		2: "EXEC_ANY",
	}
	PayloadGeneratorConfig_ExecutionEnvironment_value = map[string]int32{
		"EXECUTION_ENVIRONMENT_UNSPECIFIED": 0,
		"EXEC_INTERPRETATION_ENVIRONMENT":   1,
		"EXEC_ANY":                          2,
	}
)

func (x PayloadGeneratorConfig_ExecutionEnvironment) Enum() *PayloadGeneratorConfig_ExecutionEnvironment {
	p := new(PayloadGeneratorConfig_ExecutionEnvironment)
	*p = x
	return p
}

func (x PayloadGeneratorConfig_ExecutionEnvironment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayloadGeneratorConfig_ExecutionEnvironment) Descriptor() protoreflect.EnumDescriptor {
	return file_payload_generator_proto_enumTypes[3].Descriptor()
}

func (PayloadGeneratorConfig_ExecutionEnvironment) Type() protoreflect.EnumType {
	return &file_payload_generator_proto_enumTypes[3]
}

func (x PayloadGeneratorConfig_ExecutionEnvironment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayloadGeneratorConfig_ExecutionEnvironment.Descriptor instead.
func (PayloadGeneratorConfig_ExecutionEnvironment) EnumDescriptor() ([]byte, []int) {
	return file_payload_generator_proto_rawDescGZIP(), []int{0, 2}
}

// Attributes utilized by the PayloadGenerator to select a payload
type PayloadGeneratorConfig struct {
	state                     protoimpl.MessageState                           `protogen:"open.v1"`
	VulnerabilityType         PayloadGeneratorConfig_VulnerabilityType         `protobuf:"varint,2,opt,name=vulnerability_type,json=vulnerabilityType,proto3,enum=tsunami.proto.PayloadGeneratorConfig_VulnerabilityType" json:"vulnerability_type,omitempty"`
	InterpretationEnvironment PayloadGeneratorConfig_InterpretationEnvironment `protobuf:"varint,3,opt,name=interpretation_environment,json=interpretationEnvironment,proto3,enum=tsunami.proto.PayloadGeneratorConfig_InterpretationEnvironment" json:"interpretation_environment,omitempty"`
	ExecutionEnvironment      PayloadGeneratorConfig_ExecutionEnvironment      `protobuf:"varint,4,opt,name=execution_environment,json=executionEnvironment,proto3,enum=tsunami.proto.PayloadGeneratorConfig_ExecutionEnvironment" json:"execution_environment,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *PayloadGeneratorConfig) Reset() {
	*x = PayloadGeneratorConfig{}
	mi := &file_payload_generator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadGeneratorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadGeneratorConfig) ProtoMessage() {}

func (x *PayloadGeneratorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_payload_generator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadGeneratorConfig.ProtoReflect.Descriptor instead.
func (*PayloadGeneratorConfig) Descriptor() ([]byte, []int) {
	return file_payload_generator_proto_rawDescGZIP(), []int{0}
}

func (x *PayloadGeneratorConfig) GetVulnerabilityType() PayloadGeneratorConfig_VulnerabilityType {
	if x != nil {
		return x.VulnerabilityType
	}
	return PayloadGeneratorConfig_VULNERABILITY_TYPE_UNSPECIFIED
}

func (x *PayloadGeneratorConfig) GetInterpretationEnvironment() PayloadGeneratorConfig_InterpretationEnvironment {
	if x != nil {
		return x.InterpretationEnvironment
	}
	return PayloadGeneratorConfig_INTERPRETATION_ENVIRONMENT_UNSPECIFIED
}

func (x *PayloadGeneratorConfig) GetExecutionEnvironment() PayloadGeneratorConfig_ExecutionEnvironment {
	if x != nil {
		return x.ExecutionEnvironment
	}
	return PayloadGeneratorConfig_EXECUTION_ENVIRONMENT_UNSPECIFIED
}

// Attributes of a payload. A detector can check these attributes to change its
// logic based on the payload type.
type PayloadAttributes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the payload uses the callback server
	UsesCallbackServer bool `protobuf:"varint,1,opt,name=uses_callback_server,json=usesCallbackServer,proto3" json:"uses_callback_server,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *PayloadAttributes) Reset() {
	*x = PayloadAttributes{}
	mi := &file_payload_generator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadAttributes) ProtoMessage() {}

func (x *PayloadAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_payload_generator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadAttributes.ProtoReflect.Descriptor instead.
func (*PayloadAttributes) Descriptor() ([]byte, []int) {
	return file_payload_generator_proto_rawDescGZIP(), []int{1}
}

func (x *PayloadAttributes) GetUsesCallbackServer() bool {
	if x != nil {
		return x.UsesCallbackServer
	}
	return false
}

// Container type for payload_definitions.yaml
type PayloadLibrary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payloads      []*PayloadDefinition   `protobuf:"bytes,1,rep,name=payloads,proto3" json:"payloads,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayloadLibrary) Reset() {
	*x = PayloadLibrary{}
	mi := &file_payload_generator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadLibrary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadLibrary) ProtoMessage() {}

func (x *PayloadLibrary) ProtoReflect() protoreflect.Message {
	mi := &file_payload_generator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadLibrary.ProtoReflect.Descriptor instead.
func (*PayloadLibrary) Descriptor() ([]byte, []int) {
	return file_payload_generator_proto_rawDescGZIP(), []int{2}
}

func (x *PayloadLibrary) GetPayloads() []*PayloadDefinition {
	if x != nil {
		return x.Payloads
	}
	return nil
}

// Schema for each entry in payload_definitions.yaml
// Note: this message uses StringValue and BoolValue because we validate whether
// each payload definition in the yaml file has the correct fields present.
// Since empty proto fields are given default values (proto fields are not
// nullable), we use the wrapped types to check for actual presence.
type PayloadDefinition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The human-readable string to identify the payload
	Name                      *wrapperspb.StringValue                          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	InterpretationEnvironment PayloadGeneratorConfig_InterpretationEnvironment `protobuf:"varint,2,opt,name=interpretation_environment,json=interpretationEnvironment,proto3,enum=tsunami.proto.PayloadGeneratorConfig_InterpretationEnvironment" json:"interpretation_environment,omitempty"`
	ExecutionEnvironment      PayloadGeneratorConfig_ExecutionEnvironment      `protobuf:"varint,3,opt,name=execution_environment,json=executionEnvironment,proto3,enum=tsunami.proto.PayloadGeneratorConfig_ExecutionEnvironment" json:"execution_environment,omitempty"`
	// All vulnerability types this payload can be used for
	VulnerabilityType []PayloadGeneratorConfig_VulnerabilityType `protobuf:"varint,4,rep,packed,name=vulnerability_type,json=vulnerabilityType,proto3,enum=tsunami.proto.PayloadGeneratorConfig_VulnerabilityType" json:"vulnerability_type,omitempty"`
	// If true, payload_string must contain the $TSUNAMI_PAYLOAD_TOKEN_URL
	// token. Validation will automatically check against the callback server, so
	// the validation* fields do not need to be set.
	UsesCallbackServer *wrapperspb.BoolValue `protobuf:"bytes,5,opt,name=uses_callback_server,json=usesCallbackServer,proto3" json:"uses_callback_server,omitempty"`
	// The actual payload command string. The following special tokens can be
	// used which will cause the framework to inject dynamic content into the
	// command:
	// - $TSUNAMI_PAYLOAD_TOKEN_URL: url for the callback server
	// - a random string, used to reduce false positives.
	PayloadString *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=payload_string,json=payloadString,proto3" json:"payload_string,omitempty"`
	// The type of validation function for determining if the payload was
	// executed. Currently, only REGEX is supported.
	ValidationType PayloadValidationType `protobuf:"varint,7,opt,name=validation_type,json=validationType,proto3,enum=tsunami.proto.PayloadValidationType" json:"validation_type,omitempty"`
	// Required if validation_type == REGEX. Must be compatible with
	// java.util.regex.Pattern. The string will first be preprocessed before
	// applied as a regex, replacing any of the following tokens with the
	// corresponding values supplied by the framework:
	//   - $TSUNAMI_PAYLOAD_TOKEN_RANDOM: a random string, used to reduce false
	//     positives. The value is guaranteed to be the same as the value supplied
	//     to payload_string.
	ValidationRegex *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=validation_regex,json=validationRegex,proto3" json:"validation_regex,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PayloadDefinition) Reset() {
	*x = PayloadDefinition{}
	mi := &file_payload_generator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadDefinition) ProtoMessage() {}

func (x *PayloadDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_payload_generator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadDefinition.ProtoReflect.Descriptor instead.
func (*PayloadDefinition) Descriptor() ([]byte, []int) {
	return file_payload_generator_proto_rawDescGZIP(), []int{3}
}

func (x *PayloadDefinition) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *PayloadDefinition) GetInterpretationEnvironment() PayloadGeneratorConfig_InterpretationEnvironment {
	if x != nil {
		return x.InterpretationEnvironment
	}
	return PayloadGeneratorConfig_INTERPRETATION_ENVIRONMENT_UNSPECIFIED
}

func (x *PayloadDefinition) GetExecutionEnvironment() PayloadGeneratorConfig_ExecutionEnvironment {
	if x != nil {
		return x.ExecutionEnvironment
	}
	return PayloadGeneratorConfig_EXECUTION_ENVIRONMENT_UNSPECIFIED
}

func (x *PayloadDefinition) GetVulnerabilityType() []PayloadGeneratorConfig_VulnerabilityType {
	if x != nil {
		return x.VulnerabilityType
	}
	return nil
}

func (x *PayloadDefinition) GetUsesCallbackServer() *wrapperspb.BoolValue {
	if x != nil {
		return x.UsesCallbackServer
	}
	return nil
}

func (x *PayloadDefinition) GetPayloadString() *wrapperspb.StringValue {
	if x != nil {
		return x.PayloadString
	}
	return nil
}

func (x *PayloadDefinition) GetValidationType() PayloadValidationType {
	if x != nil {
		return x.ValidationType
	}
	return PayloadValidationType_VALIDATION_TYPE_UNSPECIFIED
}

func (x *PayloadDefinition) GetValidationRegex() *wrapperspb.StringValue {
	if x != nil {
		return x.ValidationRegex
	}
	return nil
}

var File_payload_generator_proto protoreflect.FileDescriptor

var file_payload_generator_proto_rawDesc = string([]byte{
	0x0a, 0x17, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x74, 0x73, 0x75, 0x6e, 0x61,
	0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb7, 0x06, 0x0a, 0x16, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x66, 0x0a, 0x12, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x37, 0x2e, 0x74, 0x73, 0x75, 0x6e, 0x61, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x11, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x7e, 0x0a, 0x1a, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3f, 0x2e, 0x74, 0x73, 0x75, 0x6e, 0x61, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x6f, 0x0a, 0x15, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x74, 0x73, 0x75,
	0x6e, 0x61, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x14, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x97, 0x01, 0x0a,
	0x11, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x22, 0x0a, 0x1e, 0x56, 0x55, 0x4c, 0x4e, 0x45, 0x52, 0x41, 0x42, 0x49, 0x4c,
	0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x46, 0x4c, 0x45, 0x43,
	0x54, 0x49, 0x56, 0x45, 0x5f, 0x52, 0x43, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x4c,
	0x49, 0x4e, 0x44, 0x5f, 0x52, 0x43, 0x45, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x53, 0x52,
	0x46, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x52, 0x42, 0x49, 0x54, 0x52, 0x41, 0x52, 0x59,
	0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x04, 0x12, 0x17, 0x0a,
	0x13, 0x42, 0x4c, 0x49, 0x4e, 0x44, 0x5f, 0x52, 0x43, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f,
	0x52, 0x45, 0x41, 0x44, 0x10, 0x05, 0x22, 0xb7, 0x01, 0x0a, 0x19, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x70, 0x72, 0x65, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x26, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x50, 0x52, 0x45,
	0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x4e, 0x56, 0x49, 0x52, 0x4f, 0x4e, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x49, 0x4e, 0x55, 0x58, 0x5f, 0x53, 0x48, 0x45, 0x4c, 0x4c, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x41, 0x56, 0x41, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x50,
	0x48, 0x50, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x50, 0x52, 0x45,
	0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x4e, 0x59, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12,
	0x4c, 0x49, 0x4e, 0x55, 0x58, 0x5f, 0x52, 0x4f, 0x4f, 0x54, 0x5f, 0x43, 0x52, 0x4f, 0x4e, 0x54,
	0x41, 0x42, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x53, 0x5f,
	0x53, 0x48, 0x45, 0x4c, 0x4c, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x53, 0x50, 0x10, 0x07,
	0x22, 0x70, 0x0a, 0x14, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x21, 0x45, 0x58, 0x45, 0x43,
	0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x4e, 0x56, 0x49, 0x52, 0x4f, 0x4e, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x23, 0x0a, 0x1f, 0x45, 0x58, 0x45, 0x43, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x50, 0x52, 0x45,
	0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x4e, 0x56, 0x49, 0x52, 0x4f, 0x4e, 0x4d, 0x45,
	0x4e, 0x54, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x58, 0x45, 0x43, 0x5f, 0x41, 0x4e, 0x59,
	0x10, 0x02, 0x22, 0x45, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x73, 0x5f,
	0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x75, 0x73, 0x65, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x4e, 0x0a, 0x0e, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x3c, 0x0a, 0x08, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x74, 0x73, 0x75, 0x6e, 0x61, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22, 0xc9, 0x05, 0x0a, 0x11, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x7e, 0x0a, 0x1a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x74, 0x73, 0x75, 0x6e, 0x61, 0x6d, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x65, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x65,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x6f, 0x0a, 0x15, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3a, 0x2e, 0x74, 0x73, 0x75, 0x6e, 0x61, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x14, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x66, 0x0a, 0x12, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x37,
	0x2e, 0x74, 0x73, 0x75, 0x6e, 0x61, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x11, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4c, 0x0a, 0x14, 0x75, 0x73,
	0x65, 0x73, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x12, 0x75, 0x73, 0x65, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x4d, 0x0a,
	0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x74, 0x73, 0x75, 0x6e, 0x61, 0x6d, 0x69,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x10,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x65, 0x78,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x67, 0x65, 0x78, 0x2a, 0x4e, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x1b, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45,
	0x47, 0x45, 0x58, 0x10, 0x01, 0x42, 0x77, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x74, 0x73, 0x75, 0x6e, 0x61, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x16, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x50, 0x01, 0x5a, 0x41, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74,
	0x73, 0x75, 0x6e, 0x61, 0x6d, 0x69, 0x2d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2d,
	0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x73,
	0x75, 0x6e, 0x61, 0x6d, 0x69, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_payload_generator_proto_rawDescOnce sync.Once
	file_payload_generator_proto_rawDescData []byte
)

func file_payload_generator_proto_rawDescGZIP() []byte {
	file_payload_generator_proto_rawDescOnce.Do(func() {
		file_payload_generator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_payload_generator_proto_rawDesc), len(file_payload_generator_proto_rawDesc)))
	})
	return file_payload_generator_proto_rawDescData
}

var file_payload_generator_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_payload_generator_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_payload_generator_proto_goTypes = []any{
	(PayloadValidationType)(0),                            // 0: tsunami.proto.PayloadValidationType
	(PayloadGeneratorConfig_VulnerabilityType)(0),         // 1: tsunami.proto.PayloadGeneratorConfig.VulnerabilityType
	(PayloadGeneratorConfig_InterpretationEnvironment)(0), // 2: tsunami.proto.PayloadGeneratorConfig.InterpretationEnvironment
	(PayloadGeneratorConfig_ExecutionEnvironment)(0),      // 3: tsunami.proto.PayloadGeneratorConfig.ExecutionEnvironment
	(*PayloadGeneratorConfig)(nil),                        // 4: tsunami.proto.PayloadGeneratorConfig
	(*PayloadAttributes)(nil),                             // 5: tsunami.proto.PayloadAttributes
	(*PayloadLibrary)(nil),                                // 6: tsunami.proto.PayloadLibrary
	(*PayloadDefinition)(nil),                             // 7: tsunami.proto.PayloadDefinition
	(*wrapperspb.StringValue)(nil),                        // 8: google.protobuf.StringValue
	(*wrapperspb.BoolValue)(nil),                          // 9: google.protobuf.BoolValue
}
var file_payload_generator_proto_depIdxs = []int32{
	1,  // 0: tsunami.proto.PayloadGeneratorConfig.vulnerability_type:type_name -> tsunami.proto.PayloadGeneratorConfig.VulnerabilityType
	2,  // 1: tsunami.proto.PayloadGeneratorConfig.interpretation_environment:type_name -> tsunami.proto.PayloadGeneratorConfig.InterpretationEnvironment
	3,  // 2: tsunami.proto.PayloadGeneratorConfig.execution_environment:type_name -> tsunami.proto.PayloadGeneratorConfig.ExecutionEnvironment
	7,  // 3: tsunami.proto.PayloadLibrary.payloads:type_name -> tsunami.proto.PayloadDefinition
	8,  // 4: tsunami.proto.PayloadDefinition.name:type_name -> google.protobuf.StringValue
	2,  // 5: tsunami.proto.PayloadDefinition.interpretation_environment:type_name -> tsunami.proto.PayloadGeneratorConfig.InterpretationEnvironment
	3,  // 6: tsunami.proto.PayloadDefinition.execution_environment:type_name -> tsunami.proto.PayloadGeneratorConfig.ExecutionEnvironment
	1,  // 7: tsunami.proto.PayloadDefinition.vulnerability_type:type_name -> tsunami.proto.PayloadGeneratorConfig.VulnerabilityType
	9,  // 8: tsunami.proto.PayloadDefinition.uses_callback_server:type_name -> google.protobuf.BoolValue
	8,  // 9: tsunami.proto.PayloadDefinition.payload_string:type_name -> google.protobuf.StringValue
	0,  // 10: tsunami.proto.PayloadDefinition.validation_type:type_name -> tsunami.proto.PayloadValidationType
	8,  // 11: tsunami.proto.PayloadDefinition.validation_regex:type_name -> google.protobuf.StringValue
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_payload_generator_proto_init() }
func file_payload_generator_proto_init() {
	if File_payload_generator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_payload_generator_proto_rawDesc), len(file_payload_generator_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_payload_generator_proto_goTypes,
		DependencyIndexes: file_payload_generator_proto_depIdxs,
		EnumInfos:         file_payload_generator_proto_enumTypes,
		MessageInfos:      file_payload_generator_proto_msgTypes,
	}.Build()
	File_payload_generator_proto = out.File
	file_payload_generator_proto_goTypes = nil
	file_payload_generator_proto_depIdxs = nil
}
